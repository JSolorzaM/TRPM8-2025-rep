
# Hydrogen Bond Network Analysis

Unified trajectories were generated by extracting equally spaced frames from each subunit of the human TRPM8 tetramer under four simulation conditions: APO, APO–Ca²⁺, icilin, and icilin–Ca²⁺. Hydrogen bond occupancies were computed for each condition using the default settings of the hbond command in cpptraj, excluding backbone–backbone contacts. The resulting datasets were reindexed to a global residue numbering scheme, and maximum occupancies were consolidated across all states. Each residue pair was then classified according to four interaction categories:
(i) Gained, absent in the reference condition (occupancy = 0) but present with occupancy ≥ 0.20 in the treated condition;
(ii) Disrupted, present with occupancy ≥ 0.20 in the reference condition but absent (occupancy = 0) in the treated condition;
(iii) Rearranged, present in both states (occupancy > 0) with an absolute occupancy difference ≥ 0.20; and
(iv) Maintained, displaying minimal changes (<0.20) and high persistence (occupancy ≥ 0.50 in both states).

A 20% occupancy threshold was selected to distinguish significant structural rearrangements from thermal fluctuations, while a 50% cutoff defined stable, long-lived contacts. Interactions were further restricted to functional residues within relevant structural domains, and network edge thickness was scaled to the occupancy observed in the treated condition. In the final interaction networks (Fig. 4), both the type of change (color and line style) and its quantitative persistence (line thickness) were represented: gained (green dashed), lost (red dashed), rearranged (orange solid), and maintained (gray solid). Nodes corresponded to residues from specific domains—S1 (cyan), S2 (green), S2–S3 linker (yellow), S3 (dark green), S4 (blue), S4–S5 linker (orange), and TRP (red). Thicker edges indicated highly persistent interactions (>70%), whereas thinner ones denoted transient or low-frequency contacts (<30%).

All data processing and visualization were performed in Python using pandas for data handling, matplotlib.pyplot for plotting, and networkx for the construction and analysis of hydrogen bond networks.
